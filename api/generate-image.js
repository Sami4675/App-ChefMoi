const { Configuration, OpenAIApi } = require('openai');

// Initialize OpenAI
const configuration = new Configuration({
  apiKey: process.env.OPENAI_API_KEY,
});
const openai = new OpenAIApi(configuration);

// Vercel serverless function
module.exports = async (req, res) => {
  // Enable CORS
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  // Handle preflight requests
  if (req.method === 'OPTIONS') {
    res.status(200).end();
    return;
  }

  // Only allow POST requests
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    const { recipeName, ingredients } = req.body;

    if (!recipeName || !ingredients) {
      return res.status(400).json({ error: 'Recipe name and ingredients are required' });
    }

    if (!process.env.OPENAI_API_KEY) {
      return res.status(500).json({ error: 'OpenAI API key not configured' });
    }

    // Create a prompt for DALL-E 3 to generate a Moroccan meal image
    const prompt = `A realistic but slightly grainy photograph of a traditional Moroccan dish: ${recipeName}, as if taken in a casual home or local eatery. The food is served on a rustic plate, a traditional tagine pot, or a weathered brass tray, with warm, natural lighting that enhances its textures.

Around the dish, include subtle Moroccan elements—like a sprinkle of spices (cumin, paprika, or saffron), fresh herbs (cilantro or parsley), olives, or a slice of lemon. The background hints at Moroccan decor (a textured tablecloth, a faded mosaic, or simple ceramic tiles), but remains unfocused to keep attention on the food.

The style is candid and unfiltered—slightly imperfect, with steam rising, a utensil resting nearby, or crumbs on the table. Colors are earthy yet vibrant, avoiding artificial polish. The image should feel like a genuine snapshot of Moroccan home cooking.`;

    // Generate image using DALL-E 3
    const response = await openai.createImage({
      model: "dall-e-3",
      prompt: prompt,
      n: 1,
      size: "1024x1024",
      quality: "standard", // Use standard quality for lower resolution
      style: "natural" // Natural style for realistic food photography
    });

    if (response.data && response.data.data && response.data.data.length > 0) {
      const imageUrl = response.data.data[0].url;
      
      // Send the generated image URL
      res.json({
        success: true,
        imageUrl: imageUrl,
        recipeName: recipeName,
        photographer: 'DALL-E 3',
        unsplashUrl: '', // No Unsplash URL since we're using DALL-E 3
        generatedBy: 'AI Generated'
      });
    } else {
      throw new Error('No image generated by DALL-E 3');
    }

  } catch (error) {
    console.error('Error generating image:', error);
    
    let errorMessage = 'Error generating image';
    let errorDetails = error.message;
    
    if (error.response) {
      // OpenAI API error
      errorDetails = `API Error: ${error.response.status} - ${error.response.data?.error?.message || error.message}`;
    } else if (error.message.includes('401')) {
      errorMessage = 'Invalid API key';
      errorDetails = 'Please check your OpenAI API key';
    } else if (error.message.includes('content_policy_violation')) {
      errorMessage = 'Content policy violation';
      errorDetails = 'The generated content violates OpenAI\'s content policy';
    }

    res.status(500).json({ 
      error: errorMessage,
      details: errorDetails 
    });
  }
}; 
